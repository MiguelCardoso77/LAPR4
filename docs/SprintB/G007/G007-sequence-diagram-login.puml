@startuml
autonumber

actor User

participant LoginUI <<presentation>>
participant AuthenticationCredentialHandler <<authentication>>
participant AuthzRegistry <<authentication>>
participant AuthorizationService <<authentication>>
database UserRepository <<repository>>

activate User
    note right of User
        The user role depends on the app he is using.
    end note
    User -> LoginUI: asks to login

    activate LoginUI

        LoginUI --> User: asks for email and password
    deactivate LoginUI

    User -> LoginUI: provides details
    activate LoginUI

            LoginUI -> AuthenticationCredentialHandler: authenticated(email, password, role)
            activate AuthenticationCredentialHandler

                AuthenticationCredentialHandler -> AuthzRegistry: authenticate(email, password, role)
                activate AuthzRegistry

                    AuthzRegistry -> AuthorizationService: AuthorizationService()
                    activate AuthorizationService

                        AuthorizationService --> AuthzRegistry: returns instance
                    deactivate AuthorizationService

                    AuthzRegistry -> UserRepository: get
                    activate UserRepository

                        UserRepository --> AuthzRegistry: returns userRepository
                    deactivate UserRepository

                    AuthzRegistry --> AuthenticationCredentialHandler: returns userRepository
                deactivate AuthzRegistry

                AuthenticationCredentialHandler --> LoginUI: returns true
                note left of AuthenticationCredentialHandler
                    Only returns true if user details are valid.
                end note
            deactivate AuthenticationCredentialHandler

            LoginUI -> User: shows home page
    deactivate LoginUI

deactivate User

@enduml