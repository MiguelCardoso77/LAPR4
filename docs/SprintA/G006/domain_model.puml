@startuml
hide methods
left to right direction

skinparam classAttributeIconSize 0

skinparam class {
    LifeLineBorderColor DarkBlue
    LifeLineBackgroundColor APPLICATION
    BackgroundColor #F0FFFF
    ArrowColor grey
    BorderColor black
}

skinparam packageStyle rectangle

skinparam card {
    LifeLineBorderColor Green
    LifeLineBackgroundColor APPLICATION
    BackgroundColor #F0FFDD
    ArrowColor DarkGrey
    BorderColor Black
}

package "Candidate Aggregate" {
    entity Candidate <<entity>><<root>>
        card EmailCandidate <<Value Object>> {
            }
        card NameCandidate <<Value Object>> {
            }
        card PhoneNumberCandidate <<Value Object>> {
            }
'Candidate value objects
    Candidate --> EmailCandidate
    Candidate --> NameCandidate
    Candidate --> PhoneNumberCandidate
}

package "Company Aggregate" {
    entity Customer <<entity>><<root>>



'Customer value objects


}

package "Applications Aggregate" {
    entity Application <<entity>><<root>>
'Applications value objects
        card ContentTextFile <<Value Object>>{
            }
        card PDFFiles <<Value Object>>{
            }
        card ContentEachTextFile <<Value Object>> {
            }
        card JobReference <<Value Object>> {
            }




    Application --> ContentTextFile
    Application --> PDFFiles
    Application --> ContentEachTextFile
    Application --> JobReference




}

package "Interview Aggregate"{

    entity Interview <<entity>>
'Interview value objects

    card InterviewModel <<Value Object>> {
    }

    card Results <<Value Object>> {
        }

Interview --> InterviewModel
Interview --> Results

}
package "Job Opening Aggregate" {
    entity JobOpening <<entity>><<root>>
'Job Opening value objects
        card JobReference <<Value Object>> {
            }
        card Function <<Value Object>> {
            }
        card ContractType <<Value Object>> {
            }
        card Mode <<Value Object>> {
            }
        card Address <<Value Object>> {
            }
        card NumberOfVacancies <<Value Object>> {
            }
        card Description <<Value Object>> {
            }
        card Requirements <<Value Object>> {
            }


        JobOpening --> JobReference
        JobOpening --> Function
        JobOpening --> ContractType
        JobOpening --> Mode
        JobOpening --> Address
        JobOpening --> NumberOfVacancies
        JobOpening --> Description
        JobOpening --> Requirements
}

Candidate <-- Application
Customer <-- JobOpening
Application --> JobOpening
Application --> Interview

@enduml