@startuml
autonumber

actor Operator

participant UploadRequirementsAnswersUI <<presentation>>
participant UploadRequirementsAnswersController <<controller>>
participant GenerateRequirementsAnswersTemplateController <<controller>>
participant JobOpeningService <<service>>
database    JobOpeningRepository <<repository>>
participant ListJobOpeningApplicationsController <<controller>>
participant ApplicationService <<service>>
database ApplicationRepository <<repository>>
participant RequirementsPlugin <<plugin>>
participant CandidateRequirementsService <<service>>
participant Application <<application>>
participant CandidateRequirements <<candidateRequirements>>


activate Operator

    Operator -> UploadRequirementsAnswersUI : asks to upload the requirements of and candidate
    activate UploadRequirementsAnswersUI

        UploadRequirementsAnswersUI -> UploadRequirementsAnswersController : findAllJobOpeningsWithJobRequirements()
        activate UploadRequirementsAnswersController

            UploadRequirementsAnswersController -> GenerateRequirementsAnswersTemplateController : findAllJobOpeningsWithJobRequirements()
            activate GenerateRequirementsAnswersTemplateController

                GenerateRequirementsAnswersTemplateController -> JobOpeningService : allJobOpenings()
                activate JobOpeningService

                    JobOpeningService -> JobOpeningRepository : findAll()
                    activate JobOpeningRepository

                        JobOpeningRepository --> JobOpeningService : Iterable<JobOpening> allJobOpenings
                    deactivate JobOpeningRepository

                    JobOpeningService --> GenerateRequirementsAnswersTemplateController : Iterable<JobOpening> allJobOpenings
                deactivate JobOpeningService

                GenerateRequirementsAnswersTemplateController --> UploadRequirementsAnswersController : List<JobOpening> requirements
            deactivate GenerateRequirementsAnswersTemplateController

            UploadRequirementsAnswersController --> UploadRequirementsAnswersUI: List<JobOpening> requirements
        deactivate UploadRequirementsAnswersController

        UploadRequirementsAnswersUI --> Operator : lists job openings with requirements \n and asks to select one
    deactivate UploadRequirementsAnswersUI

    Operator -> UploadRequirementsAnswersUI : selects job Opening
    activate UploadRequirementsAnswersUI

        UploadRequirementsAnswersUI -> UploadRequirementsAnswersController : showApplicationsOfJobOpening(jobReference)
        activate UploadRequirementsAnswersController

            UploadRequirementsAnswersController -> ListJobOpeningApplicationsController : showApplicationsOfJobOpening(jobReference)
            activate ListJobOpeningApplicationsController

                ListJobOpeningApplicationsController -> ListJobOpeningApplicationsController : allApplicationsOfJobOpening(jobReference)
                activate ListJobOpeningApplicationsController

                    ListJobOpeningApplicationsController -> ApplicationService : allApplications()
                    activate ApplicationService

                        ApplicationService -> ApplicationRepository : allApplications()
                        activate ApplicationRepository

                            ApplicationRepository --> ApplicationService : Iterable<Application> allApplications
                        deactivate ApplicationRepository

                        ApplicationService --> ListJobOpeningApplicationsController : Iterable<Application> applicationsOfJobOpening
                    deactivate ApplicationService
                deactivate ListJobOpeningApplicationsController

                ListJobOpeningApplicationsController --> UploadRequirementsAnswersController : Iterable<Application> applicationsOfJobOpening
            deactivate ListJobOpeningApplicationsController

            UploadRequirementsAnswersController --> UploadRequirementsAnswersUI : Iterable<Application> applicationsOfJobOpening
        deactivate UploadRequirementsAnswersController

        UploadRequirementsAnswersUI --> Operator : lists applications of that job opening \n and asks to select one
    deactivate UploadRequirementsAnswersUI

    Operator -> UploadRequirementsAnswersUI : selects application
    activate UploadRequirementsAnswersUI

        UploadRequirementsAnswersUI --> Operator : asks to enter the path to the file with the requirements
    deactivate UploadRequirementsAnswersUI

    Operator -> UploadRequirementsAnswersUI : enters the path
    activate UploadRequirementsAnswersUI

        UploadRequirementsAnswersUI -> UploadRequirementsAnswersController : retrieveResponseRequirements(path)
        activate UploadRequirementsAnswersController

            UploadRequirementsAnswersController -> RequirementsPlugin** : create
            UploadRequirementsAnswersController -> RequirementsPlugin : retrieveAnswersRequirements(path)
            activate RequirementsPlugin

                RequirementsPlugin --> UploadRequirementsAnswersController : List<String> candidateRequirements
            deactivate RequirementsPlugin

            UploadRequirementsAnswersController --> UploadRequirementsAnswersUI : List<String> candidateRequirements
        deactivate UploadRequirementsAnswersController

        UploadRequirementsAnswersUI -> UploadRequirementsAnswersController : uploadRequirements(candidateRequirements, application)
        activate UploadRequirementsAnswersController

            UploadRequirementsAnswersController -> CandidateRequirementsService : registerCandidateRequirements(requirements)
            activate CandidateRequirementsService

                CandidateRequirementsService -> CandidateRequirements** : new CandidateRequirements(requirements)
                activate CandidateRequirements

                    CandidateRequirements --> CandidateRequirementsService : candidate requirements
                deactivate CandidateRequirements

                CandidateRequirementsService --> UploadRequirementsAnswersController : candidate requirements
            deactivate CandidateRequirementsService

            UploadRequirementsAnswersController -> ApplicationService : uploadCandidateRequirements(application, candidateRequirements)
            activate ApplicationService

                ApplicationService -> Application : uploadCandidateRequirements(candidateRequirements)
                activate Application

                    Application --> ApplicationService : true
                deactivate Application

                ApplicationService --> UploadRequirementsAnswersController : true
            deactivate ApplicationService

            UploadRequirementsAnswersController -> ApplicationRepository : save(application)
            activate ApplicationRepository

                ApplicationRepository --> UploadRequirementsAnswersController : true
            deactivate ApplicationRepository

            UploadRequirementsAnswersController --> UploadRequirementsAnswersUI : application
        deactivate UploadRequirementsAnswersController

        UploadRequirementsAnswersUI --> Operator : displays operation success
    deactivate UploadRequirementsAnswersUI

deactivate Operator

@enduml