@startuml
skinparam class {
    BackgroundColor White
    ArrowColor Black
    BorderColor Black
    FontColor Black
    FontSize 14
}

Title "Class Diagram - Register a candidate"

package "presentation" {
    class ListCandidateApplicationsUI {
        + doShow()
        + headline()
    }
}

package "application" {
    class ListCandidateApplicationsController {
        + sendApplicationsRequest(email)
    }
}

package "repositories" {
    interface ApplicationRepository {
        + allApplications()
        + ofIdentity(id)
    }
}

package "domain" {
    class Application {
        + Application(rank, createdOn, applicationFiles, jobReference,
            candidate, operator)
        + Application()
        + sameAs(other)
        + equals(other)
        + hashCode()
        + compareTo(other)
        + identity()
        + rank()
        + submissionDate()
        + status()
        + dataFile()
        + operator()
        + candidate()
        + jobReference()
        + candidateRequirements()
        + updateRank(rank)
        + changeStatus(status)
        + toString()
        + uploadCandidateRequirements(candidateRequirements)
    }
}

package "services" {
    class CandidateApplicationsService {
        + requestApplications(email)
    }

    class ApplicationService {
        + registerApplication(rank, applicationFiles, jobReference, candidate, operator)
        + findApplicationById(applicationID)
        + allApplications()
        + findApplicationsForJobOpening(jobOpening)
        + updateRank(rank, application)
        + applicationsByCM(cm)
        + applicationsByCandidate(candidate)
        + numberOfApplicationsForJobOpening(jobOpening)
    }
}

ListCandidateApplicationsUI --> ListCandidateApplicationsController

ListCandidateApplicationsController --> CandidateApplicationsService

CandidateApplicationsService --> ApplicationService

CandidateApplicationsService --> Application

ApplicationService --> ApplicationRepository



@enduml