@startuml
skinparam class {
    BackgroundColor White
    ArrowColor Black
    BorderColor Black
    FontColor Black
    FontSize 14
}

Title "Class Diagram - Notifying Candidates"

package "presentation" {
    class NotifyCandidatesUI {
        + doShow()
        + headline()
        + selectJobOpening()
        + selectApplication(selectedJobOpening)
        + getLastJobInterview(selectedApplication)
        + updateRank(rank, selectedApplication)
    }
}

package "application" {
    class NotifyCandidatesController {
        + showJobOpenings()
        + allJobOpening()
        + findJobOpeningByJobReference(jobReference)
    }
}

package "services" {
    class ApplicationService {
        + registerApplication(rank, applicationFiles, jobReference, candidate, operator)
        + findApplicationById(applicationID)
        + allApplications()
        + findApplicationsForJobOpening(jobOpening)
        + updateRank(rank, application)
    }

    class EmailService {
        + registerJobOpening(jobReference, description, vacanciesNumber, address, mode, contractType, titleOrFunction, company)
        + findJobOpening(jobReference)
        + updateJobRequirements(jobReference, jobRequirementsSpecification)
        + verifyJobReference(jobReference)
        + allJobOpenings()
    }
}

package "repositories" {
    interface ApplicationRepository {
        + allApplications()
        + ofIdentity(applicationId)
    }
}

package "domain" {
    class Application {
        + Application(rank, createdOn, applicationFiles, jobReference, candidate, operator)
        + sameAs(otherApplication)
        + equals(otherApplication)
        + hashCode()
        + compareTo(otherApplication)
        + identity()
        + rank()
        + submissionDate()
        + status()
        + dataFile()
        + operator()
        + candidate()
        + jobReference()
        + updateRank(rank)
        + toString()
    }
}

NotifyCandidatesUI --> NotifyCandidatesController

NotifyCandidatesController --> ApplicationService
NotifyCandidatesController --> EmailService

ApplicationService --> ApplicationRepository

ApplicationRepository --> Application : stores

@enduml