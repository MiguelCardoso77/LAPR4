@startuml
hide methods
left to right direction

Title Domain_Model

skinparam class {
    LifeLineBorderColor DarkBlue
    LifeLineBackgroundColor APPLICATION
    BackgroundColor #F0FFFF
    ArrowColor grey
    BorderColor black
}

skinparam packageStyle rectangle

skinparam card {
    LifeLineBorderColor Green
    LifeLineBackgroundColor APPLICATION
    BackgroundColor #F0FFDD
    ArrowColor DarkGrey
    BorderColor Black
}

package "Admin Aggregate" {
entity Admin <<entity>><<root>>

    card AdminName <<Value Object>> {
    }
    card AdminEmail <<Value Object>> {
    }

        Admin --> AdminEmail
        Admin --> AdminName
}

package "Customer Aggregate"{
entity CustomerManager <<entity>><<root>>

    card ManagerName <<Value Object>> {
    }
    card ManagerEmail <<Value Object>> {
    }

        CustomerManager --> ManagerName
        CustomerManager --> ManagerEmail

}

package "Customer Aggregate"{
entity Customer <<entity>><<root>>

    card CustomerName <<Value Object>> {
    }
    card CustomerEmail <<Value Object>> {
    }
    card CustomerPhoneNumber <<Value Object>> {
    }
    card CustomerPassword <<Value Object>> {
    }

        Customer --> CustomerEmail
        Customer --> CustomerName
        Customer --> CustomerPhoneNumber
        Customer --> CustomerPassword
}

package "Operator Aggregate"{
entity Operator <<entity>><<root>>

    card OperatorName <<Value Object>> {
    }
    card OperatorEmail <<Value Object>> {
    }

        Operator --> OperatorEmail
        Operator --> OperatorName

}

package "Candidate Aggregate"{
entity Candidate <<entity>><<root>>

    card CandidateName <<Value Object>> {
    }
    card CandidateEmail <<Value Object>> {
    }
    card CandidatePhoneNumber <<Value Object>> {
    }
    card CandidatePassword <<Value Object>> {
    }
    card Curriculum <<Value Object>> {
    }

        Candidate --> CandidateEmail
        Candidate --> CandidateName
        Candidate --> CandidatePhoneNumber
        Candidate --> CandidatePassword
        Candidate --> Curriculum

}

package "Language Engineer Aggregate"{
entity LanguageEngineer <<entity>><<root>>

    card EngineerName <<Value Object>> {
    }
    card EngineerEmail <<Value Object>> {
    }

        LanguageEngineer --> EngineerEmail
        LanguageEngineer --> EngineerName

entity JobRequirementsSpecification <<entity>><<root>>

    card RequirementsAnswers <<Value Object>>{
    }

        JobRequirementsSpecification --> RequirementsAnswers

}

package "Job opening aggregate"{
entity JobOpening <<entity>><<root>>

    card JobReference <<Value Object>> {
    }
    card TitleOrFunction <<Value Object>> {
    }
    card ContractType <<Value Object>> {
    }
    card Mode <<Value Object>> {
    }
    card Address <<Value Object>> {
    }
    card Company <<Value Object>> {
    }
    card VacanciesNumber <<Value Object>> {
    }
    card Description <<Value Object>> {
    }

    JobOpening --> JobReference
    JobOpening --> TitleOrFunction
    JobOpening --> ContractType
    JobOpening --> Mode
    JobOpening --> Address
    JobOpening --> Company
    JobOpening --> VacanciesNumber
    JobOpening --> Description
}

package "Application Aggregate"{
entity Application <<entity>><<root>>

    card EmailContentFile <<Value Object>> {
    }
    card EmailFilesAttached <<Value Object>>{
    }
    card FilesAttachedContent <<Value Object>>{
    }
    card ApplicationDataFile <<Value Object>>{
    }
    card Status <<Value Object>>{
    }
    card SubmissionDate <<Value Object>>{
    }

    Application --> EmailContentFile
    Application --> EmailFilesAttached
    Application --> FilesAttachedContent
    Application --> ApplicationDataFile
    Application --> Status
    Application --> SubmissionDate

    entity JobInterview <<entity>><<root>>

        card InterviewModel <<Value Object>> {
        }
        card Results <<Value Object>> {
        }
        card InterviewTime <<Value Object>> {
        }

        JobInterview --> InterviewModel
        JobInterview --> Results
        JobInterview --> InterviewTime
}

    CustomerManager "1" -- "*" JobOpening : registers

    JobOpening "1" -- "*" Application : has
    JobOpening "1" -- "1" Customer : associated

    Application "1" -- "1" Candidate

    JobInterview "1" -- "1" Candidate

    Candidate "*" -- "*" JobOpening

    Admin "1" -- "*" Operator : manages
    Admin "1" -- "*" CustomerManager : manages
    Admin "1" -- "*" LanguageEngineer : manages

    Operator "1" -- "*" Application : monitors

    LanguageEngineer "1" -- "*" JobRequirementsSpecification : create/manages

    JobRequirementsSpecification "1" -- "*" JobOpening : associated

@enduml