@startuml
autonumber


actor "Customer Manager" as CM
participant AddJobOpeningUI <<presentation>>
participant AddJobOpeningController <<application>>
participant PersistenceContext <<persistence>>
participant RepositoryFactory <<factory>>
database CustomerRepository <<repository>>
participant Customer <<Company>>
participant JobOpening <<JobOpening>>
database JobOpeningRepository <<repository>>

activate CM


    CM -> AddJobOpeningUI: add new JobOpening

        activate AddJobOpeningUI

    AddJobOpeningUI --> CM: asks for the JobOpening's information

        deactivate AddJobOpeningUI

    CM -> AddJobOpeningUI : Description, VacanciesNumber, Address, \nMode, ContractType, TitleOrFunction, JobReference, ProcessDate

        activate AddJobOpeningUI

    AddJobOpeningUI -> AddJobOpeningController: createJobOpening(description, vacanciesNumber, \n address, mode, contractType, titleOrFunction, \n jobReference, processDate)

        activate AddJobOpeningController

    AddJobOpeningController -> PersistenceContext : repositories()

        activate PersistenceContext

    PersistenceContext --> AddJobOpeningController : factory

        deactivate PersistenceContext

    AddJobOpeningController -> RepositoryFactory : companies()

        activate RepositoryFactory

    RepositoryFactory --> AddJobOpeningController : companies

        deactivate RepositoryFactory

alt companyExists() return true

    AddJobOpeningController -> CustomerRepository : findCompanyByCode(companyName)
        activate CustomerRepository

    CustomerRepository --> AddJobOpeningController : company
        deactivate CustomerRepository
end alt


alt companyExists() return false
    AddJobOpeningController -> Customer: create(code, name)
        activate Customer

    Customer --> AddJobOpeningController: company
        deactivate Customer
end alt

    AddJobOpeningController -> JobOpening: create(description, vacanciesNumber, address, mode, contractType, titleOrFunction, \n jobReference, processDate, company)

        activate JobOpening

    JobOpening --> AddJobOpeningController: jobOpening

        deactivate JobOpening

    AddJobOpeningController -> JobOpeningRepository : save(JobOpening)

        activate JobOpeningRepository

    JobOpeningRepository --> AddJobOpeningController: return success

        deactivate JobOpeningRepository

    AddJobOpeningController --> AddJobOpeningUI : JobOpening

        deactivate AddJobOpeningController

    AddJobOpeningUI --> CM : shows operation's success

        deactivate AddJobOpeningUI

        deactivate CM

@enduml